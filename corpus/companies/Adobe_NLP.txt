1. Write an efficient program to count the number of 1s in the binary representation of an integer.[ general , code , Adobe ]
2. Given a binary number as input, we need to write a program to convert the given binary number into an equivalent decimal number. [ general , code , Adobe ]
3. Given an array of numbers, return true if given array can represent preorder traversal of a Binary Search Tree, else return false. Expected time complexity is O(n). [ BinaryTree , code , Adobe ]
4. Given an array A[] consisting 0s, 1s and 2s. The task is to write a function that sorts the given array. The functions should put all 0s first, then all 1s and all 2s in last. [ Sorting , code , Adobe ]
5. Given an integer, write a function that returns true if the given number is palindrome, else false. For example, 12321 is palindrome, but 1451 is not palindrome. [ general , code , Adobe ]
6. Pascal’s triangle is a triangular array of the binomial coefficients. Write a function that takes an integer value n as input and prints first n lines of the Pascal’s triangle . [ general , code , Adobe ]
7. Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining. [ general , code , Adobe ]
8. Inversion Count for an array indicates – how far (or close) the array is from being sorted. If the array is already sorted, then the inversion count is 0, but if the array is sorted in the reverse order, the inversion count is the maximum. Find inversion count .[ Array , code , Adobe ]
9. Convert a Binary Tree into its Mirror Tree [ BinaryTree , code , Adobe ]
10. Given a singly linked list, find the middle of the linked list. If there are even nodes, then there would be two middle nodes, we need to print the second middle element. [ LinkedList , code , Adobe ]
11. Merge Sort for Linked Lists [ LinkedList , code , Adobe ]
12. Given a Binary Tree, print Right view of it. Right view of a Binary Tree is set of nodes visible when tree is visited from Right side. [ BinaryTree , code , Adobe ]
13. Reverse Level Order Traversal -The idea is to print the last level first, then the second last level, and so on. Like Level order traversal, every level is printed from left to right. [ BinaryTree , code , Adobe ]
14. Write a function to print spiral order traversal of a tree. [ BinaryTree , code , Adobe ]
15. Write a function that takes a list sorted in non-decreasing order and deletes any duplicate nodes from the list. The list should only be traversed once. [ LinkedList , code , Adobe ]
16. What is Deadlock?  How to avoid and prevent? [ OS , tech , Adobe ]
17. Difference between Process and thread. [ OS , tech , Adobe ]
18. What are the types of link list? How to detect and remove a loop in link list? [ LinkedList , tech , Adobe ]
19. Why is Java platform independent? [ Java , tech , Adobe ]
20. Can we do array[i] = i++; [ C , tech , Adobe ]
21. Explain Thrashing in Operating Systems. [ OS , tech , Adobe ]
22. What are virtual functions? How do they work? [ C , tech , Adobe ]
23. Describe the host file in windows. With suitable example [ OS , tech , Adobe ]
24. There are two jars both filled with water :  one with capacity of 3 liters(lt) and another one with 5 liters capacity. You need to make 4 liters water by using  both of them. [ HR , Adobe ]
25. Write a pseudo code for Singleton Pattern ? [ Java , tech , Adobe ]
26. Given a String S, reverse the string without reversing its individual words. Words are separated by dots. [ String , Code , Adobe ]
27. Given a sorted and rotated array A of N distinct elements which is rotated at some point, and given an element key. The task is to find the index of the given element key in the array A. [ Array , Code , Adobe ]
28. Given an array arr[] of size N, check if it can be partitioned into two parts such that the sum of elements in both parts is the same. [ Array , Code , Adobe ]
29. Given an array of N integers arr[] where each element represents the max number of steps that can be made forward from that element. Find the minimum number of jumps to reach the end of the array (starting from the first element). If an element is 0, then you cannot move through that element.Note: Return -1 if you can't reach the end of the array [ Array , Code , Adobe ]
30. Given the root of a binary tree. Check whether it is a BST or not.Note: We are considering that BSTs can not contain duplicate Nodes. [ BinaryTree , Code , Adobe ]
31. Given a linked list of N nodes. The task is to reverse this list. [ LinkedList , Code , Adobe ]
32. Given a binary tree and an integer S, check whether there is root to leaf path with its sum as S. [ BinaryTree , Code , Adobe ]
33. Given a Binary Tree. Return 1 if, for every node X in the tree other than the leaves, its value is equal to the sum of its left subtree's value and its right subtree's value. Else return 0.An empty tree is also a Sum Tree as the sum of an empty tree can be considered to be 0. A leaf node is also considered a Sum Tree. [ BinaryTree , Code , Adobe ]
34. Given Postorder and Inorder traversals, construct the tree. [ BinaryTree , Code , Adobe ]
35. Given two positive numbers as strings. The numbers may be very large (may not fit in long long int), the task is to find product of these two numbers. [ General , Code , Adobe ]
36. Given a linked list, write a function to reverse every k nodes (where k is an input to the function). [ LinkedList , Code , Adobe ]
37. Given heights of n towers and a value k. We need to either increase or decrease the height of every tower by k (only once) where k > 0. The task is to minimize the difference between the heights of the longest and the shortest tower after modifications and output this difference. [ General , Code , Adobe ]
38. Consider a row of n coins of values v1 . . . vn, where n is even. We play a game against an opponent by alternating turns. In each turn, a player selects either the first or last coin from the row, removes it from the row permanently, and receives the value of the coin. Determine the maximum possible amount of money we can definitely win if we move first.Note: The opponent is as clever as the user. [ DP , Code , Adobe ]
39. Given a directed graph, check whether the graph contains a cycle or not. Your function should return true if the given graph contains at least one cycle, else return false.[ Graph , Code , Adobe ]
40. Given an undirected graph, how to check if there is a cycle in the graph? [ Graph , Code , Adobe ]